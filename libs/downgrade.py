# -*- coding: utf-8 -*-
"""Downgrade.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nbE-bABt6LZcPhaWlVAupoNke13Gfnyz

# Downgrade image for Single Image Super-Resolution
"""

import cv2
from PIL import Image
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Using resize method in cv2

"""

def cv2_downgrade(src,scale = 4):
  """
  Down scale is funtion help you reduce solution of image
  ---
  image: cv2.image|path, image want to decrease
  scale: int, value want to decrease default = 4
  ---
  output: image has been downgraded.
  ---
  Dev by Sho :))
  """
  if type(src) == str:
    src = cv2.cvtColor(cv2.imread(src), cv2.COLOR_BGR2RGB)
  else: src 
  w,h,c = src.shape
  down = cv2.resize(src,(int(h/scale),int(w/scale)),interpolation = cv2.INTER_CUBIC)
  

  return src, down

def plot_dg(src):
  src = cv2.cvtColor(cv2.imread('/content/drive/MyDrive/ai_prj/test.jpeg'), cv2.COLOR_BGR2RGB)
  plt.figure(figsize =(20,10))
  plt.subplot(1,2,2)
  plt.imshow(cv2_downgrade(src,4))
  plt.title("Downgrade Image")
  plt.subplot(1,2,1)
  plt.imshow(src)
  plt.title("High resolution")

# down.shape  

"""## Using drop image pixel

"""

def down_grade(image,scale = 4):
  from PIL import Image
  """
  Down scale is funtion help you reduce solution of image
  ---
  image: image|path|np.array, image want to decrease
  scale: int, value want to decrease default = 4
  ---
  output: image has been downgraded.
  ---
  Dev by Sho :))
  """
  #prepare
  if type(image) == str:
    image = Image.open(image).convert('RGB')
  else: image 
  img = np.asarray(image)
  w_t,h_t,c_t = img.shape
  a = 1 if(scale %2 == 1) else 0

  #get width height
  range_h = np.asarray([i for i in np.arange(0,h_t+a) if (i%int(scale) != 0)])
  h = h_t - range_h.shape[0]
  range_w = np.asarray([i for i in np.arange(0,w_t+a) if (i%int(scale) != 0)])
  w = w_t - range_w.shape[0]

  #drop
  down = np.zeros((w,h,c_t),'int64')
  for i in [0,1,2]:
    temp = np.delete(img[:,:,i],range_h,1)
    temp = np.delete(temp,range_w-1,0)
    down[:,:,i] = temp

  return img, down

